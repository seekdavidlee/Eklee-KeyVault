on: 
  push:
    paths-ignore: 
      - 'README.md'

jobs:
  setup:
    name: Choose Secrets Environment Job
    runs-on: windows-latest
    steps:
      - id: setup
        name: Setup Environment Setp
        run: |
            if ('${{ github.ref }}' -eq 'refs/heads/main') { 
              "build_env=prod" >> $env:GITHUB_OUTPUT
            } else {
              "build_env=dev" >> $env:GITHUB_OUTPUT
            }
    outputs:
      build_env: ${{ steps.setup.outputs.build_env }}

  build_project:
    name: Build Project
    runs-on: windows-latest
    needs: setup
    environment: ${{ needs.setup.outputs.build_env }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - id: resolve-vars
        name: Resolve variables
        run: .\Deployment\ResolveVars.ps1 -BUILD_ENV ${{ needs.setup.outputs.build_env }}

      - name: Build azure environment
        id: deploy
        uses: azure/arm-deploy@v2
        with:
          deploymentName: '${{ needs.setup.outputs.build_env }}-${{ github.run_number }}'
          resourceGroupName: ${{ steps.resolve-vars.outputs.resourceGroupName }}
          template: ./deployment/deploy.bicep
          parameters: >
            prefix=${{ steps.resolve-vars.outputs.prefix }}
            managedUserId=${{ steps.resolve-vars.outputs.managedUserId }}
            publisherEmail=${{ vars.APIM_PUBLISHER_EMAIL }}
            publisherName="${{ vars.APIM_PUBLISHER_NAME }}"
            disableStaticWebsiteSetup=${{ steps.resolve-vars.outputs.disableStaticWebsiteSetup }}
            staticWebPrimaryEndpoint=${{ steps.resolve-vars.outputs.staticWebPrimaryEndpoint }}

      - id: init-vars-for-static-web
        name: Init variables for static web
        run: .\Deployment\InitVarsForStaticWeb.ps1 -BUILD_ENV ${{ needs.setup.outputs.build_env }}

      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.init-vars-for-static-web.outputs.apiKey }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: 'EKlee.KeyVault.Client/'

      # - uses: kheiakiyama/install-azcopy-action@v1
      #   with:
      #     version: 'v10'

      # - name: Publish Blazor client code to Storage
      #   run: |
      #     .\Deployment\PublishServices.ps1 `
      #       -environmentName ${{ needs.setup.outputs.build_env }} `
      #       -appVersion ${{ github.sha }}
      #   env:
      #     APPSETTINGS: ${{ vars.APPSETTINGS }}      
